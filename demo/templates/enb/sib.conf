sib1 =
{
    intra_freq_reselection = "Allowed";
    q_rx_lev_min = -65;
    //p_max = 3;
    cell_barred = "Not Barred"
    si_window_length = 20;
    sched_info =
    (
        {
            si_periodicity = 16;
            si_mapping_info = []; // comma-separated array of SIB-indexes (from 3 to 13). 
            // Leave empty or commented to just scheduler sib2
        }
    );
    system_info_value_tag = 0;
};

sib2 = 
{
    rr_config_common_sib =
    {
        rach_cnfg = 
        {
            num_ra_preambles = 52;
            preamble_init_rx_target_pwr = -104;      // Sets the target power the ENB wants to receive PRACH from UEs. UEs use the current RSRP and the rs_power (see pdsch below) to figure out power to send PRACH
            pwr_ramping_step = 6;                    // in dB - this appears to be a power step taken on each successive PRACH retransmission when performing the PRACH procedure
            preamble_trans_max = 10;
            ra_resp_win_size = 10;  // in ms
            mac_con_res_timer = 64; // in ms
            max_harq_msg3_tx = 4;
        };
        bcch_cnfg = 
        {
            modification_period_coeff = 16; // in ms
        };
        pcch_cnfg = 
        {
            default_paging_cycle = 32; // in rf
            nB = "1";
        };
        prach_cnfg =
        {
            root_sequence_index = 128;
            prach_cnfg_info =
            {
                high_speed_flag = false;
                prach_config_index = 3;              // sets the subframes where the prach is permitted (table look up from spec) and the preamble format.
                prach_freq_offset = 2;               // sets the resource block offset where PRACH is sent. Should be adjacent to PUCCH to avoid fragmenting PUSCH. 0 to 94.
                zero_correlation_zone_config = 5;
            };
        };
        pdsch_cnfg = 
        {
            p_b = 0;        // ratio of power of a pdsch resource element in a symbol with a reference signal to a pdsch resource element in a symbol without a reference signal
                            // values for 1 antenna are: 0: 1, 1: 4/5, 2: 3/5 and 3: 2/5. We ignore all settings except 0.
            rs_power = 0;  // power of reference signal resource element in dbm
        };
        pusch_cnfg = 
        {
            n_sb = 1;
            hopping_mode = "inter-subframe";
            pusch_hopping_offset = 2;
            enable_64_qam = false; // enable/disable 64QAM PUSCH
            ul_rs = 
            {
                cyclic_shift = 0; 
                group_assignment_pusch = 0;
                group_hopping_enabled = false; 
                sequence_hopping_enabled = false; 
            };
        };
        pucch_cnfg =
        {
            delta_pucch_shift = 2;              // this is the number of cyclic shifts available for the cell specific bass sequence (1 - 12 shifts (36 possible codes), 2 - 6 shifts (18 possible codes), 3 - 4 shifts (12 possible codes))
            n_rb_cqi = 2;                       // this is the number of resource blocks available for format 2 PUCCH (which contain CQI).
            n_cs_an = 0;                        // this is the number of resource blocks that are available for shared format 1 or format 2 PUCCH, inserted between the non-shared format 2 and format 1 PUCCH resource blocks.
            n1_pucch_an = 12;                    // the standard PUCCH resource is defined by n1PUCCH-AN within the range 0 to 2047
        };
        ul_pwr_ctrl =
        {
            p0_nominal_pusch = -85;
            alpha = 0.7;
            p0_nominal_pucch = -107;
            delta_flist_pucch =
            {
                format_1  = 0; 
                format_1b = 3; 
                format_2  = 1; 
                format_2a = 2; 
                format_2b = 2; 
            };
            delta_preamble_msg3 = 6;
        };
        ul_cp_length = "len1";
    };

    ue_timers_and_constants =
    {
        t300 = 2000; // in ms
        t301 = 100;  // in ms
        t310 = 1000; // in ms
        n310 = 1;
        t311 = 1000; // in ms
        n311 = 1;
    };
	
    freqInfo = 
    {
        ul_carrier_freq_present = true; 
        ul_bw_present = true; 
        additional_spectrum_emission = 1; 
    };

    time_alignment_timer = "INFINITY"; // use "sf500", "sf750", etc.
};

