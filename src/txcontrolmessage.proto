/*
 * Copyright (c) 2019 - Adjacent Link LLC, Bridgewater, New Jersey
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * * Neither the name of Adjacent Link LLC nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * See toplevel COPYING for more information.
 */

syntax = "proto2";

import "otacommon.proto";

package EMANELTE.MHAL;

option optimize_for = SPEED;

// ********** BEGIN MSG DEFS ***********

message TxControlCarrierMessage
{
  required uint32               phy_cell_id = 1;
  required FrequencyPairMessage frequencies = 2;
  optional DownlinkMessage      downlink    = 3;
  optional UplinkMessage        uplink      = 4;
}

message TxControlMessage
{
  // tx_freq, Carrier
  map<uint64, TxControlCarrierMessage> carriers    = 1;
  required uint64       tx_seqnum                  = 2;
  required Timestamp    sf_time                    = 3;   // sf time (tti_time)
  required uint32       tti_tx                     = 4;   // tti when msg is expected to be tx/rx
  required MESSAGE_TYPE message_type               = 5;
  required uint32 subframe_duration_microsecs      = 6;
  optional float  reference_signal_power_milliwatt = 7;
}
